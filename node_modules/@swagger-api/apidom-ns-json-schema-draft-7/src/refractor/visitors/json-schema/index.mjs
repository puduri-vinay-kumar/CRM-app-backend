import { Mixin } from 'ts-mixer';
import { always } from 'ramda';
import { FixedFieldsVisitor, ParentSchemaAwareVisitor, FallbackVisitor, JSONSchemaVisitor as JSONSchemaDraft6Visitor } from '@swagger-api/apidom-ns-json-schema-draft-6';
import JSONSchemaElement from "../../../elements/JSONSchema.mjs";
/**
 * @public
 */
/**
 * @public
 */
class JSONSchemaVisitor extends Mixin(FixedFieldsVisitor, ParentSchemaAwareVisitor, FallbackVisitor) {
  constructor(options) {
    super(options);
    this.specPath = always(['document', 'objects', 'JSONSchema']);
  }

  // eslint-disable-next-line class-methods-use-this
  get defaultDialectIdentifier() {
    return 'http://json-schema.org/draft-07/schema#';
  }
  ObjectElement(objectElement) {
    this.element = new JSONSchemaElement();
    this.handleDialectIdentifier(objectElement);
    this.handleSchemaIdentifier(objectElement);

    // for further processing consider this Schema Element as parent for all embedded Schema Elements
    this.parent = this.element;
    return FixedFieldsVisitor.prototype.ObjectElement.call(this, objectElement);
  }
  BooleanElement(booleanElement) {
    const result = this.enter(booleanElement);
    this.element.classes.push('boolean-json-schema');
    return result;
  }
  handleDialectIdentifier(objectElement) {
    return JSONSchemaDraft6Visitor.prototype.handleDialectIdentifier.call(this, objectElement);
  }
  handleSchemaIdentifier(objectElement, identifierKeyword = '$id') {
    return JSONSchemaDraft6Visitor.prototype.handleSchemaIdentifier.call(this, objectElement, identifierKeyword);
  }
}
export default JSONSchemaVisitor;